#!/usr/bin/perl
# This routine update the *xyz session for orca. 
$bnk="  "; 
if( $ARGV[0] eq '-h' || $ARGV[0] eq '-help' || $ARGV[0] eq '--help')
{
help();
exit;
}
sub help {
  print "\n=== pxyz_orca_upd_xyz - ORCA Coordinate Update ===\n\n";
  print "PURPOSE:\n";
  print "  Updates the coordinate section in ORCA input files with coordinates from .pxyz files.\n";
  print "  Essential for preparing ORCA QM calculations from QM/MM selections.\n\n";
  print "USAGE:\n";
  print "  pxyz_orca_upd_xyz template.inp name_translation [file.pxyz]\n";
  print "  pxyz_orca_upd_xyz template.inp orca.nucinfo qm_atoms.pxyz > orca_calc.inp\n\n";
  print "PARAMETERS:\n";
  print "  template.inp      - ORCA template file with *xyz section\n";
  print "  name_translation  - Atom name translation file\n";
  print "  file.pxyz         - Coordinate data (optional, reads from stdin if not provided)\n\n";
  print "INPUT:\n";
  print "  - ORCA template file with '*xyz' section marking coordinate area\n";
  print "  - Name translation file format: 'atomname element_symbol'\n";
  print "  - .pxyz format: 'atomname x y z molname mark'\n\n";
  print "OUTPUT:\n";
  print "  - Complete ORCA input file written to stdout with updated coordinates\n";
  print "  - Warning to stderr if atom names not found in translation file\n\n";
  print "DETAILS:\n";
  print "  - Searches for '*xyz' keyword marking coordinate section\n";
  print "  - Format: 'element x y z #atomnumber'\n";
  print "  - Adds sequential atom numbering as comments\n";
  print "  - Continues reading template until 'Q' or '*' (end markers)\n";
  print "  - Preserves all ORCA calculation directives and parameters\n";
  print "  - Translates atom names using name_translation file\n\n";
  print "ORCA COORDINATE FORMAT:\n";
  print "  *xyz 0 1\n";
  print "  C     31.26000   29.05000   54.94000 #1\n";
  print "  H     30.78000   28.03000   54.67000 #2\n";
  print "  O     29.95000   27.21000   55.12000 #3\n";
  print "  *\n\n";
  print "TRANSLATION FILE FORMAT:\n";
  print "  # Comments start with #\n";
  print "  H1          H\n";
  print "  CA          C\n";
  print "  OW          O\n\n";
  print "EXAMPLES:\n";
  print "  pxyz_orca_upd_xyz template.inp orca.nucinfo qm_atoms.pxyz > orca_calc.inp\n";
  print "  pxyz_orca_upd_xyz qm.inp nucinfo < qm_region.pxyz > calculation.inp\n\n";
  print "TEMPLATE REQUIREMENT:\n";
  print "  Template must contain '*xyz' keyword where coordinates should be inserted.\n";
  print "  Example template section:\n";
  print "  ! B3LYP 6-31G* opt\n";
  print "  *xyz 0 1\n";
  print "  (coordinates will be inserted here)\n";
  print "  *\n\n";
  print "COORDINATE NUMBERING:\n";
  print "  - Atoms numbered sequentially starting from 1\n";
  print "  - Numbers added as comments (# format)\n";
  print "  - Useful for identifying atoms in ORCA output\n";
  print "  - Example: 'C  1.0  2.0  3.0 #1'\n\n";
  print "SEE ALSO:\n";
  print "  pxyz_orca_upd_chg - Update MM charge section for QM/MM calculations\n\n";
}

$templ=$ARGV[0]; shift; # This is the template file
$namtrans=$ARGV[0];shift; # This is the nam translation file

die "ERROR: NameTranslation file: $namtrans expected!\n" unless -e $namtrans;
die "ERROR: Template file: $templ expected!\n" unless -e $templ;

open (naminfo,"<", $namtrans); # open nameinfo
### Save nameinfo, create "function" to translate name in pxyz to desired name in ORCA input file
while (<naminfo>){
chomp;
if ((substr $_, 0, 1) eq "#") {next;}
($nam, $QMnam)=split;
$trans{$nam} = $QMnam;
}
$shlwarn=0;

open (orca, "<", $templ); # Open ORCA template file
do {$_=<orca>; print;} until (/\*\s*xyz/); # * is keyword for beginnin of xyz portion of MyMol.inp file
while(<>)
{
   chomp;$natms=$_; 
   $_=<>;
   for($i=0;$i<$natms;$i++){ 
     $_=<>; chomp; ($nam,$xxx,$yyy,$zzz,$mol,$mar)=split;
     if ( $trans{$nam} ){
     $tmpname=$trans{$nam} }
     else {$tmpname = $nam;$shlwarn=1};
     print $bnk,$tmpname,$bnk,$xxx,$bnk,$yyy,$bnk,$zzz,$bnk,"#",$i+1 , "\n";
   }
   last;
}

do  {$_=<orca>; } until (/\s*Q/ || /\s*\*/);
print;
while(<orca>){print;}
print STDERR "Warning: At least one atom name is not in the NameTranslation file.\n" if ($shlwarn);
