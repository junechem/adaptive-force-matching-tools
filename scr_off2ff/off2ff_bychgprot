#!/usr/bin/perl

# off2ff_bychgprot - Modify force field parameters based on charge product criteria
#
# This script calculates charge products for atom pairs and modifies force field
# terms based on specified charge product conditions.

if (@ARGV < 7 || $ARGV[0] eq '-h' || $ARGV[0] eq '--help') {
    print_help();
    exit(@ARGV < 7 ? 1 : 0);
}

sub print_help {
    print << 'EOF';

NAME
    off2ff_bychgprot - Modify force field parameters based on charge product criteria

PURPOSE
    This script calculates the product of atomic charges for atom pairs in force field
    terms and selectively adds or removes terms based on charge product conditions.
    It can extract charges from OFF files or external charge files to evaluate
    electrostatic interactions.

USAGE
    off2ff_bychgprot condition action chgparam ffparam input.off input.ff output.ff

PARAMETERS
    condition   - Charge product condition: "keyword,operator,value"
                  • keyword: Currently not used (placeholder)
                  • operator: Comparison operator for charge product
                    - gt: Greater than
                    - lt: Less than  
                    - ge: Greater than or equal
                    - le: Less than or equal
                  • value: Threshold value for charge product comparison
    
    action      - Action to perform on matching terms:
                  • add: Add terms meeting the condition
                  • rem: Remove terms meeting the condition
    
    chgparam    - Charge parameter specification:
                  • OFF format: Parameters passed to offget_charge
                  • File format: "file=filename" to read charges from external file
                    (File format: atom_name charge_value per line)
    
    ffparam     - Force field parameter specification: "ff_potential,ln1-ln2,ln3,ln4-ln5,..."
                  • ff_potential: Force field interaction type to examine
                  • ln#: Line numbers or ranges of terms to check
                  • Use ln# format for single lines, ln#-ln# for ranges
    
    input.off   - Input OFF format file containing charge information
    input.ff    - Input force field file to be modified  
    output.ff   - Output force field file (must not exist)

INPUT
    • OFF file: Contains atomic charge information for charge extraction
    • Force field file: Contains interaction terms with atom pair specifications
    • Optional charge file: External file with atom names and charges

OUTPUT
    • Modified force field file with terms added or removed based on charge criteria
    • Console output showing atom pairs, charges, and charge products processed
    • Summary of number of terms modified

DETAILS
    The script works by:
    1. Extracting atomic charges from OFF file or external charge file
    2. Reading specified force field terms and extracting atom pair names
    3. Calculating charge products for each atom pair (charge1 × charge2)
    4. Applying the specified condition to filter terms
    5. Adding or removing matching terms using ffaddremtermbynam

    For external charge files, use format "file=filename" where the file contains
    one atom name and charge value per line separated by whitespace.

    Line number specifications support both individual lines (ln5) and ranges
    (ln10-15). The script processes all specified lines/ranges for the given
    force field interaction type.

EXAMPLES
    # Remove terms where charge product is greater than 0.5
    off2ff_bychgprot "dummy,gt,0.5" rem "standard_charges" "COUL,ln1-100" input.off input.ff output.ff

    # Add terms where charge product is less than -0.1 using external charges
    off2ff_bychgprot "dummy,lt,-0.1" add "file=charges.dat" "LJ,ln50-75,ln80" input.off input.ff output.ff

    # Remove coulomb terms with charge product >= 0.8
    off2ff_bychgprot "dummy,ge,0.8" rem "atom_charges" "COUL,ln1-50" input.off input.ff output.ff

TYPICAL WORKFLOW
    1. Identify the force field interaction type and line ranges to examine
    2. Determine charge product threshold and comparison criteria
    3. Choose appropriate charge source (OFF file or external file)
    4. Run the script to filter terms based on charge products
    5. Review the console output to verify terms processed
    6. Check the output force field file for modifications

SEE ALSO
    offget_charge, ffaddremtermbynam, ffgetpam, off2ff_bymaxminpam

EOF
}

$condition=$ARGV[0];shift;$action=$ARGV[0];shift;
$chgpam=$ARGV[0];shift;$ffpam=$ARGV[0];shift;
$inputoff=$ARGV[0];shift;$inpff=$ARGV[0];shift;$outff=$ARGV[0];shift;
$tmpfile = "/tmp/tempoff2ff.$$"; $tmpfil2 = "/tmp/tempoff2f2.$$";
system ("cp $inpff $tmpfile");
die "script will not overwrite existing output\n" if (-e $outff);

if ( $chgpam =~ /file/i ){
  @off=split /=/,$chgpam; $file=$off[1];
  open(CHGFILE,"<",$file);
  while(<CHGFILE>) {
    ($nam,$charge)=split; $chg{$nam}=$charge;
    $n++; } #get atom charges from a file
  print "Get [ ".$n." ] atom charges from [ ".$file." ] file.\n";
} else {
  @total=`offget_charge $chgpam  $inputoff`;
  for ($j=0;$j<@total;$j++)
  {
    $str=$total[$j];chomp($str); $str =~ s/^\s+|\s+$//g;
    @temp=split /\s+/,$str;
    $nam=$temp[0];$chg{$nam}=$temp[4];
  }
} #end get atom charges from off file

#condition for charge product
@cond=split(',',$condition);
$keyword=$cond[0];
$operator=$cond[1];
$val0=$cond[2];

# parameter position in ff file
@ff=split(',',$ffpam); 
$keywordff=$ff[0];
$idx=0;
if ( @ff == 1) {
  die "Please provide the line number of charge product in .ff file!\n";
} else {
  for ($n=1;$n<@ff;$n++) {
    $ff[$n]= substr $ff[$n],2; @templn=split(/-/,$ff[$n]);
    $templn[1]=$templn[0] unless $templn[1] > $templn[0];
    for ($j=$templn[0];$j<=$templn[1];$j++){ $ln[$idx]=$j; $idx++; } }
} # line number are provided.

$nterm=$idx;$idx=0;
print "atm1  atm2    chg_atm1    chg_atm2    chg_product\n";
for ($i=0;$i<$nterm;$i++){
  $pamln=$ln[$i];
  $temp=`ffgetpam  $keywordff $pamln 1 $inpff`;chomp($temp);$nam1=uc($temp) ;#first atom name
  $temp=`ffgetpam  $keywordff $pamln 2 $inpff`;chomp($temp);$nam2=uc($temp) ; #second atom name
  $chgprod=$chg{$nam1}*$chg{$nam2};
  $rm=0;
  $rm=1 if ( $operator eq "gt" and  $chgprod > $val0);
  $rm=1 if ( $operator eq "lt" and  $chgprod < $val0);
  $rm=1 if ( $operator eq "ge" and  $chgprod >= $val0);
  $rm=1 if ( $operator eq "le" and  $chgprod <= $val0);
  if ($rm) { 
    $potential=$keywordff.",".$nam1.",".$nam2;
    print "$nam1    $nam2    $chg{$nam1}    $chg{$nam2}    $chgprod.\n";
    system("ffaddremtermbynam  $action  $potential  $tmpfile > $tmpfil2; mv $tmpfil2 $tmpfile");
    $idx++;
  }
}

print "$action [ $idx ] terms from [ $keywordff ].\n";
system ("mv $tmpfile $outff");

