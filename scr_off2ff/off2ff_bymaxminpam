#!/usr/bin/perl

# off2ff_bymaxminpam - Modify force field parameters based on maximum/minimum OFF file parameters
#
# This script identifies force field terms by finding the maximum or minimum parameter
# values from OFF file interactions and adds/removes corresponding terms in the force field.

if (@ARGV < 7 || $ARGV[0] eq '-h' || $ARGV[0] eq '--help') {
    print_help();
    exit(@ARGV < 7 ? 1 : 0);
}

sub print_help {
    print << 'EOF';

NAME
    off2ff_bymaxminpam - Modify force field parameters based on maximum/minimum OFF parameters

PURPOSE
    This script searches through OFF file interaction parameters to find the maximum or 
    minimum value for a specified parameter column. It then identifies the corresponding 
    atom pair and modifies the force field by adding or removing the associated term.

USAGE
    off2ff_bymaxminpam condition action offparam ffparam input.off input.ff output.ff

PARAMETERS
    condition   - Search condition: "max,operator,value" or "min,operator,value"
                  • max: Find maximum parameter value
                  • min: Find minimum parameter value
                  • operator: Currently not used in comparison
                  • value: Currently not used in comparison
    
    action      - Action to perform on force field:
                  • add: Add the identified term to force field
                  • rem: Remove the identified term from force field
    
    offparam    - OFF file parameter specification: "potential,col3,param2,param3,..."
                  • potential: Interaction type to extract (e.g., "LJ", "COUL")
                  • col3: Column number for parameter comparison (format: col#)
                  • Additional parameters passed to offget_inter
    
    ffparam     - Force field parameter specification: "ff_potential"
                  • ff_potential: Force field interaction type to modify
    
    input.off   - Input OFF format file containing interaction parameters
    input.ff    - Input force field file to be modified
    output.ff   - Output force field file (must not exist)

INPUT
    • OFF file: Contains interaction parameters with atom pairs and numerical values
    • Force field file: Standard force field format file

OUTPUT
    • Modified force field file with term added or removed
    • Console output showing the action taken and parameter value found

DETAILS
    The script works by:
    1. Parsing the OFF parameter specification to extract interaction data
    2. Using offget_inter to retrieve all matching interactions from the OFF file
    3. Scanning through the parameter values in the specified column
    4. Finding the maximum or minimum value and its corresponding atom pair
    5. Constructing the force field term identifier using the atom pair names
    6. Using ffaddremtermbynam to add or remove the term from the force field

    The parameter comparison is performed on the column specified in the offparam
    argument (col# format). The script maintains the atom pair names associated
    with the extreme parameter value for force field modification.

EXAMPLES
    # Find maximum LJ epsilon parameter and remove corresponding term
    off2ff_bymaxminpam "max,gt,0" rem "LJ,col3" "LJ" input.off input.ff output.ff

    # Find minimum coulomb parameter and add corresponding term  
    off2ff_bymaxminpam "min,lt,0" add "COUL,col4,1.0" "COUL" input.off input.ff output.ff

    # Find maximum bond parameter in column 5 and remove term
    off2ff_bymaxminpam "max,ge,1.0" rem "BOND,col5" "BOND" input.off input.ff output.ff

TYPICAL WORKFLOW
    1. Identify the interaction type and parameter column of interest in OFF file
    2. Decide whether to find maximum or minimum parameter value
    3. Choose to add or remove the corresponding force field term
    4. Run the script to modify the force field
    5. Verify the changes in the output force field file

SEE ALSO
    offget_inter, ffaddremtermbynam, off2ff_bychgprot, offget_tabparam

EOF
}

$condition=$ARGV[0];$action=$ARGV[1];$offpam=$ARGV[2];$ffpam=$ARGV[3];
$inputoff=$ARGV[4];$inpff=$ARGV[5];$outff=$ARGV[6];
$tmpfile = "/tmp/tempoff2ff.$$"; $tmpfil2 = "/tmp/tempoff2f2.$$";
system ("cp $inpff $tmpfile");
die "script will not overwrite existing output\n" if (-e $outff);

#off parameter
@off=split(',',$offpam);
$getpot=$off[0];
$pamcol=substr $off[1],3;
for ($n=2;$n<@off;$n++){ $getpot=$getpot.",".$off[$n]; }
@total=`offget_inter $inputoff $getpot`;

#condition
@cond=split(',',$condition); #parameter postion in off file
$keyword=$cond[0];
$operator=$cond[1];
$val0=$cond[2];

#ff parameter
@ff=split(',',$ffpam);

$min=1000000000000;$max=-1000000000000;
for ($ip=0;$ip<@total;$ip++){
  $str=$total[$ip];
  chomp($str);
  $str =~ s/^\s+|\s+$//g;
  @ipot=split /\s+/,$str;
  $pam=$ipot[$pamcol-1]; 
  if ($keyword eq "max") {
    if ($pam > $max) { $max=$pam; $nam1=$ipot[0];$nam2=$ipot[1];$val=$max; }
  } elsif ($keyword eq "min")  {
    if ($pam < $min) { $min=$pam; $nam1=$ipot[0];$nam2=$ipot[1];$val=$min; }
  } else { 
    die "No rule for ".$keyword." !\n";
  }
}
      
$potential=$ff[0].",".$nam1.",".$nam2;
print $action."   ".$potential."  parameter: ".$val."\n";
system("ffaddremtermbynam  $action  $potential  $tmpfile > $tmpfil2; mv $tmpfil2 $tmpfile" );
system ("mv $tmpfile $outff");
