#!/usr/bin/perl

if( $ARGV[0] eq '-h' || $ARGV[0] eq '-help' || $ARGV[0] eq '--help')
{
help();
exit;
}
sub help {
    print "\n=== get_gmx_frc - GROMACS Force Calculator ===\n\n";
    print "PURPOSE:\n";
    print "  Perform GROMACS calculations and extract forces.\n";
    print "  Complete workflow for MM force calculations in AFMTools.\n\n";
    print "USAGE:\n";
    print "  get_gmx_frc file.gro templatedir\n";
    print "  get_gmx_frc system.gro /path/to/gromacs_templates/\n\n";
    print "PARAMETERS:\n";
    print "  file.gro    - GROMACS coordinate file\n";
    print "  templatedir - Directory containing GROMACS topology and parameter files\n\n";
    print "INPUT:\n";
    print "  - .gro coordinate file\n";
    print "  - Template directory with topology files, parameter files, and mdrun setup\n";
    print "  - Required files in templatedir: template.top, mdrun.mdp, input_ndx, table files\n\n";
    print "OUTPUT:\n";
    print "  - basename.gmxfrc - GROMACS force file\n";
    print "  - basename.log - MD simulation log file\n\n";
    print "DETAILS:\n";
    print "  - Updates topology file using top_upd_mol_nu\n";
    print "  - Runs GROMACS MD simulation with energy minimization\n";
    print "  - Extracts forces from trajectory files using gmx dump\n";
    print "  - Uses MPI-enabled mdrun with custom force field tables\n";
    print "  - Cleans up temporary files automatically\n\n";
    print "WORKFLOW:\n";
    print "  1. Copy coordinate file to template directory\n";
    print "  2. Update topology with correct molecule counts\n";
    print "  3. Generate index file using gmx make_ndx\n";
    print "  4. Prepare simulation with gmx grompp\n";
    print "  5. Run MD simulation with mdrun_mpi\n";
    print "  6. Extract forces from trajectory using gmx dump\n";
    print "  7. Clean up and move output files\n\n";
    print "TEMPLATE DIRECTORY REQUIREMENTS:\n";
    print "  - template.top: GROMACS topology template\n";
    print "  - mdrun.mdp: MD parameters file\n";
    print "  - input_ndx: Input for make_ndx (index groups)\n";
    print "  - table, tableb: Custom force field tables\n";
    print "  - Proper force field parameter files\n\n";
    print "EXAMPLES:\n";
    print "  get_gmx_frc system.gro /path/to/gromacs_templates/\n";
    print "  get_gmx_frc molecule.gro ~/gmx_setup/ && ref_upd_gmx_frc molecule.gmxfrc system.ref > final.ref\n\n";
    print "TYPICAL WORKFLOW:\n";
    print "  1. Prepare GROMACS templates with topology and parameters\n";
    print "  2. Run MM calculation: get_gmx_frc system.gro templates/\n";
    print "  3. Add to .ref file: ref_upd_gmx_frc system.gmxfrc forces.ref > updated.ref\n\n";
    print "REQUIREMENTS:\n";
    print "  - GROMACS installation (gmx_d, mdrun_mpi)\n";
    print "  - top_upd_mol_nu script in PATH\n";
    print "  - Properly configured template directory\n";
    print "  - MPI support for parallel execution\n\n";
    print "ERROR HANDLING:\n";
    print "  - Dies if incorrect number of arguments provided\n";
    print "  - Requires exactly 2 arguments (gro file and template directory)\n";
    print "  - Check log files for GROMACS-specific errors\n\n";
    print "SEE ALSO:\n";
    print "  top_upd_mol_nu  - Update water molecule count in topology\n";
    print "  ref_upd_gmx_frc - Add GROMACS forces to .ref files\n\n";
}

$updtopexe="top_upd_mol_nu";
$mdrunoptions="-nt 1";

die "usage: getgmxforce grofile templatedir\n" unless (@ARGV == 2); 

#$tempdir="/dev/shm/gromacsrun.$$";
$groname=$ARGV[0];
$templatedir=$ARGV[1];

$basename = substr $groname,0,-4;

system("cd $templatedir;rm *.gro *.ndx *.tpr *.log *.trr *.xtc *.edr mdout.mdp");
system("cp $groname $templatedir");
system("$updtopexe $groname $templatedir/template.top > $templatedir/template_updated.top");
system("cd $templatedir; gmx_d make_ndx -f $groname < input_ndx");
system("cd $templatedir; gmx_d grompp -f mdrun.mdp -c $groname -n index.ndx -p template_updated.top");
#system("cd $templatedir; mdrun_d -s topol.tpr $mdrunoptions");
system("cd $templatedir; mdrun_mpi  -s topol.tpr -table table -tableb table  $mdrunoptions");
system("cd $templatedir;".'gmx_d dump -f traj.trr|grep "f\[" > gmxforce.out');
system("mv $templatedir/md.log $basename.log; mv $templatedir/gmxforce.out $basename.gmxfrc");
