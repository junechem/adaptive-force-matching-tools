#!/usr/bin/perl
if( $ARGV[0] eq '-h' || $ARGV[0] eq '-help' || $ARGV[0] eq '--help')
{
help();
exit;
}
sub help {
    print "\n=== ref_upd_gmx_frc - GROMACS Force Integration ===\n\n";
    print "PURPOSE:\n";
    print "  Add GROMACS forces to existing .ref files.\n";
    print "  Essential for integrating GROMACS MM forces into AFMTools workflows.\n\n";
    print "USAGE:\n";
    print "  ref_upd_gmx_frc gromacs_forces_file [file.ref]\n";
    print "  ref_upd_gmx_frc system.gmxfrc forces.ref > updated.ref\n\n";
    print "PARAMETERS:\n";
    print "  gromacs_forces_file - GROMACS forces file (from get_gmx_frc)\n";
    print "  file.ref           - Existing .ref file (optional, reads from stdin if not provided)\n\n";
    print "INPUT:\n";
    print "  - GROMACS forces file with specialized format\n";
    print "  - Existing .ref file with coordinates and current forces\n\n";
    print "OUTPUT:\n";
    print "  - Updated .ref file with GROMACS force field contributions added to stdout\n\n";
    print "DETAILS:\n";
    print "  - Handles GROMACS-specific force file format with f[n]={x,y,z} notation\n";
    print "  - Unit conversion: 1.0/41.84 (kJ/mol/nm → kcal/mol/Å)\n";
    print "  - Adds GROMACS contributions to existing forces in .ref file\n";
    print "  - Preserves NetF and Torq entries unchanged\n";
    print "  - Processes atoms sequentially in file order\n\n";
    print "GROMACS FORCE FILE FORMAT:\n";
    print "  Expected format (generated by get_gmx_frc):\n";
    print "  f[    0]={-4.57260e+02, -2.77023e+02,  1.15747e+03}\n";
    print "  f[    1]={ 1.36283e+03, -1.41065e+01, -1.30921e+03}\n";
    print "  f[    2]={ 4.42350e+02, -6.83688e+01,  6.43386e+02}\n";
    print "  - Each line contains force vector for one atom\n";
    print "  - Forces in kJ/mol/nm units\n\n";
    print "UNIT CONVERSION:\n";
    print "  - GROMACS forces in kJ/mol/nm\n";
    print "  - Output forces in kcal/mol/Å\n";
    print "  - Conversion factor: 1.0/41.84\n";
    print "  - Standard conversion for GROMACS to AFMTools units\n\n";
    print "EXAMPLES:\n";
    print "  get_gmx_frc system.gro templates/ && ref_upd_gmx_frc system.gmxfrc forces.ref > updated.ref\n";
    print "  ref_upd_gmx_frc gromacs_forces.dat step1.ref > step2.ref\n\n";
    print "TYPICAL WORKFLOW:\n";
    print "  1. Generate initial: ref_gen_step1_cord molinfo coords.xyz > step1.ref\n";
    print "  2. Run GROMACS: get_gmx_frc system.gro templates/\n";
    print "  3. Add forces: ref_upd_gmx_frc system.gmxfrc step1.ref > step2.ref\n";
    print "  4. Calculate net: ref_upd_net step2.ref > final.ref\n\n";
    print "SEE ALSO:\n";
    print "  get_gmx_frc        - Perform GROMACS calculations and extract forces\n";
    print "  ref_upd_net        - Calculate net forces and torques\n";
    print "  ref_gen_step1_cord - Generate initial .ref files\n\n";
}


$conv=1.0/41.84;
$bnk="     ";

open(GMX,"$ARGV[0]") || die "can not open $ARGV[0]\n";
shift;

$i=0;
while(<GMX>){
($tmp,$fxx[$i],$fyy[$i],$fzz[$i]) = split(/[{,}]/);
#print "debug: $fxx[$i] $fyy[$i] $fzz[$i]\n";
$i++;
}

$_=<>;print;
$_=<>;print;
$i=0;
while(<>)
{
($nam,$xxx,$yyy,$zzz, $frx, $fry, $frz, $solv, $molnam)=split;
unless (($nam eq "NetF") | ($nam eq "Torq")){

print $nam.$bnk.$xxx.$bnk.$yyy.$bnk.$zzz.$bnk;
printf "%15.9f$bnk%15.9f$bnk%15.9f",$frx+$fxx[$i]*$conv,$fry+$fyy[$i]*$conv,$frz+$fzz[$i]*$conv;
print $bnk.$solv.$bnk.$molind.$molnam."\n";

$i++;
}
else { print;}

}



